# -*- coding: utf-8 -*- #

PR include "date.a68" PR
PR include "time.a68" PR
PR include "../utils.a68" PR;
PR include "../csv.a68" PR;

STRING task csv header = "ID,TITLE,DESCRIPTION,REASON,STATUS,DATE,START,FINISH,REPETITION";

MODE TASKSTATE = SHORT INT;
MODE TASKREPEATITION = SHORT INT;

MODE TIMES = STRUCT(
	REF TIME start, # nullable #
	REF TIME finish # nullable #
);

MODE TASK = STRUCT (
	INT id,
	STRING title,
	STRING description,
	REF STRING reason, # nullable #
	TASKSTATE state,
	DATE date,
	TIMES time,
	TASKREPEATITION repeatition
);

TASKSTATE pending = 1;
TASKSTATE done = 2;
TASKSTATE canceled = 3;

TASKREPEATITION today = 1;
TASKREPEATITION todaystack = 2;
TASKREPEATITION daily = 3;
TASKREPEATITION weekly = 4;
TASKREPEATITION monthly = 5;
TASKREPEATITION annually = 6;
TASKREPEATITION everyweekday = 7;

OP +:= = (REF FLEX [] TASK in out, TASK item) VOID: (
	[UPB in out + 1] TASK new;
	new[:UPB in out] := in out;
	new[UPB new] := item;
	in out := new
);

PROC csv to task = (FLEXCSVFIELDS fields) TASK: (
	TIMES times = (
		# start #  (fields[7] = "" | NIL | HEAP TIME := str to time(fields[7])),
		# finish # (fields[8] = "" | NIL | HEAP TIME := str to time(fields[8]))
	);

	TASK(
		# id # TOINT fields[1],
		# title # fields[2],
		# description # fields[3],
		# reason # (fields[4] = "" | NIL | fields[4]),
		# state # TOINT fields[5],
		# date # str to date(fields[6]),
		# time # times,
		# repeatition # TOINT fields[9]
	)
);

PROC task to csv = (TASK task) STRING: (
	BOOL
		has description = UPB description OF task > 0,
		has reason = reason OF task :/=: REF STRING(NIL),
		has time = start OF time OF task :/=: REF TIME(NIL),
		has finish = finish OF time OF task :/=: REF TIME(NIL);

	[] STRING fields = (
		# id # whole(id OF task, 0),
		# title # """" + title OF task + """",
		# description # (has description | """" + description OF task + """" | ""),
		# reason # (has reason | """" + reason OF task + """" | ""),
		# state # whole(state OF task, 0),
		# date # REPR date OF task,
		# start # (has time | REPR start OF time OF task | ""),
		# finish # (has finish | REPR finish OF time OF task | ""),
		# repeatition # whole(repeatition OF task, 0)
	);

	join(fields, ",")
)
