# -*- coding: utf-8 -*- #

PR include "../text processing.a68" PR;

MODE DATE = STRUCT ( INT month, day, year );

# local time: year, month, day, hours, minutes, seconds, day of week and daylight-saving-time flag #
DATE today = (local time[2], local time[3], local time[1]);

OP = = (DATE a, b) BOOL:
	day OF a = day OF b AND
	month OF a = month OF b AND
	year OF a = year OF b;

OP /= = (DATE a, b) BOOL: NOT (a = b);

OP + = (DATE date, INT days) DATE: (
	DATE result := date;
	day OF result +:= days;

	WHILE day OF result > days in month(month OF result, year OF result) DO
		day OF result -:= days in month(month OF result, year OF result);
		month OF result +:= 1;

		IF month OF result > 12 THEN
			month OF result := 1;
			year OF result +:= 1
		FI
	OD;

	WHILE day OF result < 1 DO
		month OF result -:= 1;

		IF month OF result < 1 THEN
			month OF result := 12;
			year OF result -:= 1
		FI;

		day OF result +:= days in month(month OF result, year OF result)
	OD;

	result
);

PROC days in month = (INT month, year) INT: (
	IF month = 2 THEN (is leap year(year) | 29 | 28)
	ELIF month = 4 OR month = 6 OR month = 9 OR month = 11 THEN 30
	ELSE 31
	FI
);

PROC is leap year = (INT year) BOOL:
	year MOD 4 = 0 AND (year MOD 100 /= 0 OR year MOD 400 = 0);

PROC date to str = (DATE date) STRING:
	(month OF date <= 9 | "0" | "") + whole(month OF date, 0) + "/" +
	(day OF date <= 9 | "0" | "") + whole(day OF date, 0) + "/" +
	whole(year OF date, 0);

PROC str to date = (STRING str) DATE: (
	IF UPB str /= 10 OR
		 str[3] /= "/" OR str[6] /= "/"
	THEN
		printf(($g" cannot be coerced to DATE"l$, str));
		stop
	FI;

	DATE(
		TOINT (str[1] + str[2]),
		TOINT (str[4] + str[5]),
		TOINT (str[7] + str[8] + str[9] + str[10])
	)
)
