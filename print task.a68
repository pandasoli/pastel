# -*- coding: utf-8 -*- #

PR include "globals.a68" PR;

PROC print task = (TASK task) VOID: (
	BOOL
		is all day = time OF task :=: REF TIMES(NIL),
		has finish = (is all day | FALSE | finish OF time OF task :/=: REF TIME(NIL));

	[] STRING state =
		(  state OF task = pending  | ("○", "")
		|: state OF task = done     | (esc + "[32m●", esc + "[9m")
		|: state OF task = canceled | (esc + "[31m✖", esc + "[9m")
		| ("", "")
		);

	# left side #
	IF is all day THEN
		printf($"      │"$)
	ELSE
		printf(($g" "$, REPR start OF time OF task))
	FI;

	# right side #
	printf(($g" "ggg"[m"l$, state[1], state[2], title OF task, esc));

	# bottom #
	STRING description = (state OF task = canceled AND (reason OF task :/=: REF STRING(NIL)) | reason OF task | description OF task);

	# left side #
	IF NOT is all day THEN
		IF has finish THEN
			printf(($g" │   "$, REPR finish OF time OF task))
		ELSE
			print("      │   ")
		FI
	ELIF UPB description > 0 THEN
		print("      │    ")
	FI;

	# right side #
	IF UPB description > 0 THEN
		STRING right padding = (is all day | "    " | "   ");
		[] STRING parts = wrap text(description, 37);

		FOR i TO UPB parts DO
			printf(($gl$, parts[i]));
			printf(($"      │"g$, right padding))
		OD;

		new line(stand out)
	ELIF NOT is all day THEN
		new line(stand out);

		IF has finish THEN printf($"      │"l$)
		FI
	FI
)
