
PROC print task = (TASK task) VOID: (
	BOOL
		is all day = time OF task :=: REF TIMES(NIL),
		has finish = (is all day | FALSE | finish OF time OF task :/=: REF TIME(NIL));

	[] STRING state =
		IF   state OF task = pending  THEN ("○", "")
		ELIF state OF task = done     THEN (esc + "[32m●", esc + "[9m")
		ELIF state OF task = canceled THEN (esc + "[31m✖", esc + "[9m")
		ELSE ("", "")
		FI;

	# left side #
	IF is all day THEN
		printf($"      │"$)
	ELSE
		printf(($g" "$, REPR start OF time OF task))
	FI;

	# right side #
	printf(($g" "ggg"[m"l$, state[1], state[2], title OF task, esc));

	# bottom #
	STRING description = (state OF task = canceled AND (reason OF task :/=: REF STRING(NIL)) | reason OF task | description OF task);

	# left side #
	IF NOT is all day THEN
		IF has finish THEN
			printf(($g" │   "$, REPR finish OF time OF task))
		ELSE
			print("      │   ")
		FI
	ELIF UPB description > 0 THEN
		print("      │    ")
	FI;

	# right side #
	IF UPB description > 0 THEN
		INT i := 1;
		STRING right padding = (is all day | "    " | "   ");

		WHILE i < UPB description DO
			INT len = min(37, UPB description - i) + 1;

			printf(($gl$, description[i:][:len]));
			printf(($"      │"g$, right padding));
			i +:= len
		OD;

		new line(stand out)
	ELIF NOT is all day THEN
		new line(stand out);

		IF has finish THEN printf($"      │"l$)
		FI
	FI
)
