# -*- coding: utf-8 -*- #

PR include "../globals.a68" PR
PR include "../quick sort.a68" PR;

PROC remove = (REF INT argi) VOID: (
	STRING arg := get argv(argi +:= 1, "Expected index or 'week' after 'remove'");

	IF arg = "week" THEN
		REF STRING arg := (argi < a68g argc | LOC STRING := a68g argv(argi +:= 1) | NIL);
		DATE date = (arg :=: REF STRING(NIL) | get week start | get week start of day(str to date(arg)));

		append file("./new.csv", week csv header);

		get all weeks((WEEK w) VOID:
			IF date OF w /= date THEN
				append file("./new.csv", week to csv(w))
			FI
		);

		move file("./new.csv", weeks data path);
		stop
	FI;

	INT index = TOINT arg;

	[] ITEM items = get today items;

	IF index > UPB items THEN
		putf(stand error, ($g"[31m"gg"[m"ll$, esc, "There're not many items in today's list", esc));
		stop
	FI;

	ITEM item = items[index];
	INT id = get item id(item);

	# Remove from items list #
	CASE item IN
		(NOTE note):
			BEGIN
				append file("./new.csv", note csv header);

				get all notes((NOTE n) VOID:
					IF id OF n /= id OF note THEN
						append file("./new.csv", note to csv(n))
					FI
				);

				move file("./new.csv", notes data path)
			END,

		(TASK task):
			BEGIN
				append file("./new.csv", task csv header);

				get all tasks((TASK t) VOID:
					IF id OF t /= id OF task THEN
						append file("./new.csv", task to csv(t))
					FI
				);

				move file("./new.csv", tasks data path)
			END
	ESAC;

	# Remove from group #
	[] GROUP groups = get today groups;
	REF GROUP group := NIL;

	FOR i TO UPB groups DO
		IF includes(ids OF groups[i], id) THEN
			group := LOC GROUP := groups[i];
			finish groups
		FI
	OD;
	finish groups:

	IF group :/=: REF GROUP(NIL) THEN
		# Remove id from group #
		[] INT ids = ids OF group;
		ids OF group := ~;

		FOR i TO UPB ids DO
			IF ids[i] /= id THEN
				ids OF group +:= ids[i]
			FI
		OD;

		# Store new group #
		append file("./new.csv", group csv header);

		get all groups((GROUP g) VOID:
			IF id OF g /= id OF group THEN
				append file("./new.csv", group to csv(g))
			ELIF UPB ids OF group > 0 THEN
				append file("./new.csv", group to csv(group))
			FI
		);

		move file("./new.csv", groups data path)
	FI
)
