# -*- coding: utf-8 -*- #

PR include "types/task.a68" PR
PR include "database.a68" PR
PR include "handles/add.a68" PR
PR include "handles/note/sub.a68" PR
PR include "handles/todo/sub.a68" PR
PR include "handles/rm.a68" PR
PR include "handles/done.a68" PR;
PR include "handles/sort.a68" PR
PR include "handles/cal.a68" PR;
PR include "unix.a68" PR;
PR include "utils.a68" PR;
PR include "text processing.a68" PR;

IF a68g argc = 1 THEN
	[] TASK tasks = get all today tasks;

	FOR i TO UPB tasks DO
		printf(($g"[1m"g(0)g"[m "$, esc, i, esc));

		IF state OF tasks[i] = task_done
		THEN printf(($g"[9m"gg"[m"l$, esc, title OF tasks[i], esc))
		ELSE printf(($gl$, title OF tasks[i]))
		FI;

		IF UPB desc OF tasks[i] > 0 THEN
			[] STRING lines = split text(desc OF tasks[i], REPR 10);

			FOR j TO UPB lines DO
				[] STRING parts = wrap text(lines[j], 60);
				STRING part = join(parts, REPR 10 + "  ");
				printf(($"  "gl$, part))
			OD
		FI
	OD
ELSE
	INT argi := 2;
	STRING arg = a68g argv(argi); argi +:= 1;

	IF   arg = "add"  THEN add(argi)
	ELIF arg = "note" THEN sub note(argi)
	ELIF arg = "todo" THEN sub todo(argi)
	ELIF arg = "rm"   THEN rm(argi)
	ELIF arg = "done" THEN done(argi)
	ELIF arg = "sort" THEN sort(argi)
	ELIF arg = "cal"  THEN cal(argi)
	FI
FI
