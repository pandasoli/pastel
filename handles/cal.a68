# -*- coding: utf-8 -*- #

PROC first week month day = (INT month, year) INT: (
	# Zeller's Congruence algorithm #
	INT h, q, m, k, j, y := year;

	IF month < 3 THEN
		m := month + 12;
		y := year - 1
	ELSE
		m := month
	FI;

	q := 1;
	k := y MOD 100;
	j := (y % 100);

	h := (q + ((13 * (m + 1)) % 5) + k + (k % 4) + (j % 4) + (5 * j)) MOD 7;

	(h + 6) MOD 7 + 1
);

PROC print calendar = (INT month, day, year, [] TASK tasks) VOID: (
	[] STRING months = ("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
	INT days in month = get days in month(month, year);

	# Print header #
	printf(($glgl$,
		center text(months[month] + " " + whole(year, 0), 20),
		"Su Mo Tu We Th Fr Sa"
	));

	# Space until first day's week day #
	INT first day := first week month day(month, year);

	TO first day - 1 DO print("   ")
	OD;

	INT day i := 1;

	TO 6 DO
		FROM first day TO 7 DO
			IF day i <= days in month THEN
				BOOL is today =
					(year = year OF today) AND
					(month = month OF today) AND
					(day i = day OF today);
				BOOL has tasks := FALSE;

				FOR i TO UPB tasks DO
					IF day OF date OF tasks[i] = day i
					THEN has tasks := TRUE
					FI
				OD;

				IF is today THEN printf(($gg"[7m"$, cl one, esc))
				ELIF has tasks THEN print(cl two)
				FI;

				printf(($gg(0)$, (day i < 10 | " " | ""), day i));

				IF is today OR has tasks
				THEN printf(($g"[m"$, REPR 27))
				FI;

				print(" ");
				day i +:= 1
			ELSE print("   ")
			FI
		OD;

		newline(stand out);
		first day := 1
	OD
);

PROC cal = (INT argi) VOID: (
	STRING arg = a68g argv(argi);
	INT index = TOINT arg;
	FLEX [0] TASK tasks;

	IF arg = "H" OR (arg /= "" AND index = 0)
	THEN show help page("cal")
	ELSE INT
		month := month OF today,
		day := day OF today,
		year := year OF today;

		# Ajust based on received index #
		month +:= index;

		WHILE month > 12 DO
			year +:= 1;
			month -:= 12
		OD;

		WHILE month < 1 DO
			year -:= 1;
			month +:= 12
		OD;

		get tasks((TASK task) VOID:
			IF year OF date OF task = year
			AND month OF date OF task = month
			THEN
				tasks +:= task
			FI
		);

		print calendar(month, day, year, tasks)
	FI
)
