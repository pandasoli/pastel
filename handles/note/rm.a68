# -*- coding: utf-8 -*- #

# rm indexes... ['['group']'] #
PROC note rm = (INT argi) VOID: (
	FLEX [0] NOTE notes := get all notes;

	STRING group := seek group(argi);
	FLEX [0] INT indexes;

	PROC remove index = (INT i) VOID: (
		[UPB notes - 1] NOTE new;
		new[:i - 1] := notes[:i - 1];
		new[i:] := notes[i + 1:];
		notes := new
	);

	PROC remove indexes = VOID: (
		INT i := 1, index := 1;

		WHILE i <= UPB notes DO
			IF group OF notes[i] = groupTHEN
				IF index INCL indexes THEN remove index(i); i -:= 1 FI;
				index +:= 1
			FI;
			i +:= 1
		OD
	);

	FOR i FROM argi TO a68g argc
	DO STRING arg = a68g argv(i);
		IF is group(arg) THEN
			group := seek group(argi);
			indexes := [] INT ();
			remove indexes
		ELSE indexes +:= TOINT arg
		FI
	OD;

	# rm removes when reach a group, this removes the last indexes #
	IF NOT is group(a68g argv(a68g argc))
	THEN remove indexes
	FI;

	write notes(notes)
)
