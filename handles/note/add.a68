# -*- coding: utf-8 -*- #

PR include "../../database/note.a68" PR
PR include "utils.a68" PR;

#
	add ['['group']'] <<
	add notes ['['group']'] ...
#
PROC note add = (REF INT argi) VOID: (
	NOTE note := (
		# content # "",
		# group # seek group(argi)
	);

	PROC multiple = VOID:
		WHILE argi <= a68g argc DO
			STRING arg = a68g argv(argi);
			argi +:= 1;

			IF is group(arg) THEN
				group OF note := seek group(argi);
				done note
			FI;

			content OF note := arg;
			write note(note);

			done note: ~
		OD;

	PROC single piped = VOID: (
		on logical file end(stand in, (REF FILE f) BOOL: done in);

		getf(stand in, ($gl$, content OF note));
		IF content OF note = "" THEN done in FI;

		DO STRING in;
			getf(stand in, ($gl$, in));
			IF in = "EOF" THEN done in FI;
			content OF note +:= REPR 10 + in
		OD;

		done in: write note(note)
	);

	# ANDF and ORF show warnings, this avoid their usage required 'by is group'. #

	IF   a68g argc = argi - 1 THEN single piped # add #
	ELIF a68g argc = argi THEN
		IF is group(a68g argv(argi)) THEN single piped # add '['group']' #
		ELSE multiple
		FI
	ELSE multiple
	FI
)
