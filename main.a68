#!/usr/bin/a68g --script #
# -*- coding: utf-8 -*- #

PR nowarnings PR
PR include "types.a68" PR;
PR include "ops.a68" PR;
PR include "csv.a68" PR
PR include "quick sort.a68" PR;
PR include "prints.a68" PR;

PR include "generate test.a68" PR;

[] INT now = local time; # year, month, day, hours, minutes, seconds, day of week and daylight-saving-time flag #
DATE today date = (now[2], now[3], now[1]);

FILE f;
INT err;

IF a68g argc = 1 THEN
	err := open(f, "./tasks.csv", stand in channel);

	IF err /= 0 THEN
		printf(($"Error: "gl$, err));
		stop
	FI;

	CSV regs = read csv(f);
	close(f);

	FLEX [0] TASK tasks;
	FOR i TO UPB regs DO
		TASK task = csv to task(regs[i]);

		IF date OF task = today date THEN
			tasks +:= task
		FI
	OD;

	quick sort tasks(tasks, 1, UPB tasks);
	BOOL found sep := FALSE;

	printf($l"      ╭"l$);

	FOR i TO UPB tasks DO
		IF (time OF tasks[i] :/=: REF TIMES(NIL)) AND NOT found sep THEN
			found sep := TRUE;
			printf($"      │"l$);
			printf($"      │"l$)
		FI;

		print task(tasks[i])
	OD;

	printf($"      ╰"ll$)
FI
